# Генераторы похожи на итераторы тем, что возвращают некую последовательность
# значений. Отличие в том, что итераторы чаще всего возвращают коллекции. Т.е.
# коллекция хранит все данные и тратит на хранение память. Далее коллекция
# возвращает хранимые элементы через интерфейс итерации. Генераторы не хранят
# данные в памяти, а вычисляют их по мере необходимости, чтобы вернуть очередное
# значение.

a = range(0, 10, 2)
print(f'{a=}, {type(a)=}, {a.__sizeof__()=}, {len(a)}')
b = range(-1_000_000, 1_000_000, 2)
print(f'{b=}, {type(b)=}, {b.__sizeof__()=}, {len(b)}')
