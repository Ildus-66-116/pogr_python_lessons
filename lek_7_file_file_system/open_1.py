f = open('text_data.txt', encoding='utf-8')
print(f)
print(list(f))
f.close()       # обязательно закрыть

# mode='r' - для чтения
# ➢ 'w' — открыть для записи, предварительно очистив файл
# ➢ 'x' — открыть для эксклюзивного создания. Вернёт ошибку, если файл уже существует
# ➢ 'a' — открыть для записи в конец файла, если он существует
# ➢ 'b' — двоичный режим
# ➢ 't' — текстовый режим (по умолчанию)
# ➢ '+' — открыты для обновления (чтение и запись)

f = open('text_data.txt', 'a', encoding='utf-8')
f.write('Окончание файла\n')
f.close()

f = open('bin_data', 'wb', buffering=64)    # задал буфер в 64 байта
f.write(b'X' * 1200)
f.close()

# errors — используется только в текстовом режиме и определяет поведение в случае
# ошибок кодирования или декодирования. Рассмотрим несколько возможных
# вариантов параметра:
# ➢ 'strict' — вызывает исключение ValueError в случае ошибки. Работает как
# значение по умолчанию.
# ➢ 'ignore' — игнорирует ошибки кодирования. При этом игнорирование ошибок
# может привести к потере данных.
# ➢ 'replace' — вставляет маркер замены (например, '?') там, где есть
# некодируемые данные.
# ➢ 'namereplace' — при записи заменяет неподдерживаемые символы
# последовательностями \N{...}.

